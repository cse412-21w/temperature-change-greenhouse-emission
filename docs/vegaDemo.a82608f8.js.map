{"version":3,"sources":["vegaDemo.js"],"names":["ds","options","config","init","view","tooltip","vegaTooltip","Handler","call","renderer","vl","register","vega","vegaLite","d3","csv","then","data","forEach","d","push","drawBarVegaLite","countries","uniqueValid","Country","selectGenre","selectSingle","fields","bind","menu","temp","markLine","select","transform","groupby","aggregate","average","as","encode","y","fieldQ","title","x","opacity","if","value","ghg","markBar","vconcat","render","viewElement","document","getElementById","appendChild"],"mappings":"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","file":"vegaDemo.a82608f8.js","sourceRoot":"..\\src","sourcesContent":["import fpData from '../static/fpData.csv'    // import dataset\r\n\"use strict\";     // the code should be executed in \"strict mode\".\r\n                  // With strict mode, you can not, for example, use undeclared variables\r\n\r\nvar ds = [];   // used to store data later\r\n\r\n\r\nconst options = {\r\n  config: {\r\n    // Vega-Lite default configuration\r\n  },\r\n  init: (view) => {\r\n    // initialize tooltip handler\r\n    view.tooltip(new vegaTooltip.Handler().call);\r\n  },\r\n  view: {\r\n    // view constructor options\r\n    // remove the loader if you don't want to default to vega-datasets!\r\n    //   loader: vega.loader({\r\n    //     baseURL: \"\",\r\n    //   }),\r\n    renderer: \"canvas\",\r\n  },\r\n};\r\n\r\nvl.register(vega, vegaLite, options);\r\n\r\n// Again, We use d3.csv() to process data\r\nd3.csv(ds).then(function(data) {\r\n  data.forEach(function(d){\r\n    ds.push(d);\r\n  })\r\n  drawBarVegaLite();\r\n});\r\n\r\n\r\nfunction drawBarVegaLite() {\r\n  // var sunshine = add_data(vl, sunshine.csv, format_type = NULL);\r\n  // your visualization goes here\r\n  const countries = uniqueValid(ds, d => d.Country)\r\n    const selectGenre = vl.selectSingle('Select') // name the selection 'Select'\r\n      .fields('Country')          // limit selection to the Major_Genre field\r\n      .init({Country: countries[0]}) // use first genre entry as initial value\r\n      .bind(vl.menu(countries));\r\n\r\n    const temp = vl.markLine()\r\n      .data(ds)\r\n      .select(selectGenre)\r\n      .transform(\r\n        vl.groupby(['Country','Year'])\r\n          .aggregate(vl.average('temperature').as('avg_temp'))\r\n      ).encode(\r\n        vl.y().fieldQ('avg_temp').title('avg_temp'),\r\n        vl.x().fieldQ('Year'),\r\n        vl.opacity().if(selectGenre, vl.value(0.75)).value(0.05)\r\n      );\r\n\r\n    const ghg = vl.markBar()\r\n      .data(ds)\r\n      .transform(\r\n        vl.groupby(['Country','Year'])\r\n          .aggregate(vl.average('GHG').as('avg_ghg'))\r\n      ).encode(\r\n        vl.x().fieldQ('Year'),\r\n        vl.y().fieldQ('avg_ghg').title('avg_ghg'),\r\n        vl.opacity().if(selectGenre, vl.value(0.75)).value(0.05)\r\n      )\r\n\r\n    vl.vconcat(ghg, temp)\r\n      .render()\r\n      .then(viewElement => {\r\n      // render returns a promise to a DOM element containing the chart\r\n      // viewElement.value contains the Vega View object instance\r\n      document.getElementById('view').appendChild(viewElement);\r\n    });\r\n}\r\n"]}